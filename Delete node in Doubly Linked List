Approach 1 :

class Solution {
  public:
    Node* deleteNode(Node* head, int z) {
        // Your code here
        if(z==1)
            return head->next;
        int n=1;
        Node *temp=head;
        while(n!=z-1)
        {
            temp=temp->next;
            n++;
        }
        
        temp->next=temp->next->next;
        if(temp->next!=NULL)
            temp->next->prev=temp;
        return head;
    }
};


Approach 2 :

class Solution {
  public:
    Node* deleteNode(Node* head, int z) {
        // Your code here
        if(z==1)
            return head->next;
        int n=1;
        Node *temp=head;
        while(n!=z)
        {
            temp=temp->next;
            n++;
        }
        Node *x=head;
        while(x->next!=temp)
        {
            x=x->next;
        }
        x->next=temp->next;
        if(temp->next!=NULL)
            temp->next->prev=x;
        return head;
    }
};
