class Solution {
  public:
    string zero(string s) {
        int i = 0;
        while (i < s.size() && s[i] == '0') {
            i++;
        }
        return (i == s.size()) ? "0" : s.substr(i);
    }
    
    /*You are required to complete below function */
    string multiplyStrings(string& s1, string& s2) {
        // Your code here
        bool negative = false;
        
        if (s1.size() > 0 && s1[0] == '-') {
            negative = !negative;
            s1 = s1.substr(1);
        }
        
        if (s2.size() > 0 && s2[0] == '-') {
            negative = !negative;
            s2 = s2.substr(1);
        }
        
        s1 = zero(s1);
        s2 = zero(s2);
        
        if(s1=="0" || s2=="0") return "0";
        
        int n = s1.size(), m = s2.size();
        vector<int> result(n+m, 0);
        
        for (int i = n - 1; i >= 0; --i) {
            for (int j = m - 1; j >= 0; --j) {
                int mul = (s1[i] - '0') * (s2[j] - '0');
                int sum = mul + result[i + j + 1];
                result[i + j + 1] = sum % 10;
                result[i + j] += sum / 10;
            }
        }
        
        string res = "";
        int i = 0;
        
        while (i < result.size() && result[i] == 0) {
            i++;
        }
        
        while (i < result.size()) {
            res.push_back(result[i] + '0');
            i++;
        }
        
        if (negative) {
            res = '-' + res;
        }
        
        return res;
    }
};
