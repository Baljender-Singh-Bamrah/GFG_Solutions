class Solution {
  public:
    vector<int> countLessEq(vector<int>& a, vector<int>& b) {
        // code here
        sort(b.begin(), b.end());
        int idx = 0;
        unordered_map<int,int> mp;
        vector<int> temp(a.begin(), a.end());
        sort(temp.begin(), temp.end());
        int cnt = 0;
        for(auto it: temp) {
            while(idx<b.size() && b[idx]<=it) {
                cnt++;
                idx++;
            }
            mp[it]=cnt;
        }
        vector<int> result;
        for(auto it: a) {
            result.push_back(mp[it]);
        }
        
        return result;
    }
};

Approach 2:

class Solution {
  public:
    vector<int> countLessEq(vector<int>& a, vector<int>& b) {
        // code here
        sort(b.begin(), b.end());
        vector<int> result;
        
        for (int x : a) {
            int count = upper_bound(b.begin(), b.end(), x) - b.begin();
            result.push_back(count);
        }
        
        return result;
    }
};
