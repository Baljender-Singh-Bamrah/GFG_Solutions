class Solution
{
  public:
    string secFrequent (string arr[], int n)
    {
        //code here.
        unordered_map<string,int> mp;
        
        for(int i=0 ; i<n ; i++){
            mp[arr[i]]++;
        }
        
        // int m=arr[0],s=arr[0];
        string ans="",temp="";
        int m=0,s=0;
        for(auto it:mp){
            if(it.second>m){
                s=m;
                m=it.second;
                if(s!=m){
                    ans=temp;
                }
                temp=it.first;
            }
            
            else if(it.second>s){
                s=it.second;
                ans=it.first;
            }
        }
        
        return ans;
    }
};


Approach 2 : 

class Solution
{
  public:
    string secFrequent (string arr[], int n)
    {
        unordered_map<string, int> mp;
        
        for(int i=0;i<n;i++) {
            mp[arr[i]]++;
        }
        
        vector<pair<int , string>> pr;
        
        for(auto it : mp) {
            pr.push_back({it.second , it.first});
        }
    
        sort(pr.begin(), pr.end());
        
        if(pr.size() < 2)
            return "";
        
        return pr[pr.size()-2].second;
    }
};
