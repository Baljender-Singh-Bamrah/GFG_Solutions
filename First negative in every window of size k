vector<long long> printFirstNegativeInteger(long long int A[],
                  long long int N, long long int K) {
    vector<long long> ans;
    deque<int> dq;
    for(int i=0; i<N; i++){
        if(!dq.empty() && dq.front() == i - K) dq.pop_front();
        if(A[i] < 0) dq.push_back(i);
        if(i >= K - 1){
            if(dq.empty()) ans.push_back(0);
            else ans.push_back(A[dq.front()]);
        }
    }
    return ans;
}

Approach 2 -> TLE !

vector<long long> printFirstNegativeInteger(long long int A[],
                                             long long int N, long long int K) {
       vector<long long> result;
       int i=0,j=0;
       while(j+K<=N){
           bool flag=true;
           int z=0;
          while(z<K){
              if(A[i]<0){
                  result.push_back(A[i]);
                  flag=false;
                  break;
              }
              i++;
              z++;
          }
          if(flag){
              result.push_back(0);
          }
          i=++j;
       }
       return result;
       
 }
