class Solution {
  public:
    vector<int> findOrder(int n, vector<vector<int>> &prerequisites) {
        // code here
        unordered_map<int, vector<int>> adj;
        vector<int> degree(n, 0);
        for(auto &it: prerequisites) {
            adj[it[1]].push_back(it[0]);
            degree[it[0]]++;
        }
        
        queue<int> q;
        
        for(int i=0 ; i<n ; i++) {
            if(degree[i]==0) {
                q.push(i);
            }
        }
        
        vector<int> result;
        
        while(!q.empty()) {
            int t = q.front();
            q.pop();
            result.push_back(t);
            
            for(auto &it: adj[t]) {
                degree[it]--;
                if(degree[it]==0) {
                    q.push(it);
                }
            }
        }
        
        if(result.size()==n) {
            return result;
        }
        
        return {};
        
    }
};
